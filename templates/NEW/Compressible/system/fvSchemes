/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// * * * Scheme macro section  * * * * * * * * * * * * * * * * * * * * * * * //

Correction      limited 0.33; // corrected;

DivMethod       bounded Gauss;

// * * * End scheme macro section  * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default         Gauss linear;
    grad(p)         Gauss linear;
    gradLimiter     cellLimited Gauss linear 1;
    gradLimited     cellLimited Gauss linear 1;
}

divSchemes
{
    default             none; //$DivMethod upwind;
    div(phi,U)          $DivMethod linearUpwind gradLimiter;
    div(phi,k)          $DivMethod limitedLinear 1;
    div(phi,epsilon)    $DivMethod limitedLinear 1;
    div(phi,omega)      $DivMethod limitedLinear 1;
    div(phi,nuTilda)    $DivMethod limitedLinear 1;

    div(phi,e)          $DivMethod upwind;
    div(phi,e)          $DivMethod upwind;
    div(phi,K)          $DivMethod linear;
    div(phid,p)         $DivMethod upwind;
    div(phiv,p)         $DivMethod upwind;
    div(phi,Ekp)        $DivMethod upwind;

    "div(.*rho.*nuEff.*dev2.*)"  Gauss linear;
    div((phi|interpolate(rho)),p) Gauss upwind;
}

laplacianSchemes
{
    default         Gauss linear $Correction;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         $Correction;
}

wallDist
{
    method          meshWave;
}

// ************************************************************************* //
