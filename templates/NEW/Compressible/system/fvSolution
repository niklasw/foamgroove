/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "${FOAM_CASE}/setup.foam";

solvers
{
    p
    {
        $:solver.gamg;
    }

    pcorr
    {
        $p;
        tolerance       1e-2;
        relTol          0;
    }

    U
    {
        $:solver.pbicg;
    }

    "(rho|k|epsilon|omega|e|h)"
    {
        $:solver.smoothSolver;
    }

    "(rho|k|epsilon|omega|e|h)Final"
    {
        $:solver.pbicg;
    }

    /* For transient solvers */

    UFinal
    {
        $U;
        relTol 0;
    }

    pFinal
    {
        $p;
        relTol 0;
    }
}

SIMPLE
{
    nNonOrthogonalCorrectors 0;
    pRefCell        0;
    pRefValue       0;
    rhoMin          rhoMin [ 1 -3 0 0 0 ] 0.5;
    rhoMax          rhoMax [ 1 -3 0 0 0 ] 2.0;

    residualControl
    {
        p                       1e-4;
        U                       1e-4;
        "(k|epsilon|omega|e)"   1e-3;
    }

}

potentialFlow
{
    nNonOrthogonalCorrectors    20;
}

PISO
{
    nCorrectors                 2;
    nNonOrthogonalCorrectors    2;
    pRefCell                    0;
    pRefValue                   0;
}

PIMPLE
{
    nOuterCorrectors            2;
    nCorrectors                 2;
    nNonOrthogonalCorrectors    1;
    pRefCell                    0;
    pRefValue                   0;
    rhoMin          rhoMin [ 1 -3 0 0 0 ] 0.5;
    rhoMax          rhoMax [ 1 -3 0 0 0 ] 10.0;
}

relaxationFactors
{
    fields
    {
        p               $:relaxation.pressure;
        rho             $:relaxation.rho;
    };
    equations
    {
        U                   $:relaxation.velocity;
        "(k|epsilon|omega)" $:relaxation.turbulence;
        e                   $:relaxation.energy;
    }
}


// ************************************************************************* //
