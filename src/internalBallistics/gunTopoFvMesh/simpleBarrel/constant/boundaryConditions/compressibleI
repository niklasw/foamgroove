/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      boundaryConditions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

    compressibleWalls
    {
        T
        {
            type            zeroGradient;
        };

        alphat
        {
            type            compressible::alphatWallFunction;
            value           uniform 0;
        };

        k
        {
            type            compressible::kqRWallFunction;
        };

        epsilon
        {
            type            compressible::epsilonWallFunction;
        };

        omega
        {
            type            compressible::omegaWallFunction;
        };

        nut
        {
            type            compressible::nutkWallFunction;
        };

        nuSgs
        {
            type            compressible::nutUSpaldingWallFunction;
        };


    };

    walls
    {
        $..compressibleWalls;
    };

    default
    {
        $..compressibleWalls;
    };

    fixedInlet
    {
        T
        {
            type            fixedValue;
            value           $:energy.inletTemperature;
        };

        alphat
        {
            type            calculated;
            value           uniform 0;
        };

        epsilon
        {
            type            compressible::turbulentMixingLengthDissipationRateInlet;
        };

        omega
        {
            type            compressible::turbulentMixingLengthFrequencyInlet;
        };


    };

    flowRateInlet
    {
        T
        {
            type            fixedValue;
            value           $:energy.inletTemperature;
        };

        alphat
        {
            type            calculated;
            value           uniform 0;
        };

        epsilon
        {
            type            compressible::turbulentMixingLengthDissipationRateInlet;
        };

        omega
        {
            type            compressible::turbulentMixingLengthFrequencyInlet;
        };
    };


    pressureOutlet
    {
        T
        {
            type            inletOutlet;
            value           $:energy.ambientTemperature;
            inletValue      $:energy.ambientTemperature;
        };

        alphat
        {
            type            calculated;
            value           uniform 0;
        };
    };

    totalPressure
    {
        T
        {
            type            inletOutlet;
            value           $:energy.ambientTemperature;
            inletValue      $:energy.ambientTemperature;
        };

        alphat
        {
            type            calculated;
            value           uniform 0;
        };

    }

    slipWalls
    {
    };

    movingWalls
    {
        $..compressibleWalls;
    };

    freestream
    {
        T
        {
            type                freestream;
            freestreamValue     $:energy.ambientTemperature;
        };

        alphat
        {
            type            calculated;
            value           uniform 0;
        };
    };
