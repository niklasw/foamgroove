#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os,sys,glob,re

from parameterized.suiteTools import SuiteRunner
from parameterized.testSuiteUtils import Paths,Error,Debug,Info

progName = os.path.basename(sys.argv[0])

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

import signal
def signal_handler(signal, frame):
    print('\nOapps! Killed by SIGINT.')
    print('\t(Manually clean out stale subCases)')
    sys.exit(0)

def getArgs():
    from optparse import OptionParser
    from optparse import Values as optValues
    descString = """
    Test suite runner frontend
    """
    parser=OptionParser(description=descString)
    parser.add_option('-t','--tests',dest='testroot',default=None,type=str,help='Test cases root')
    parser.add_option('-p','--present',dest='htmlroot',default=None,type=str,help='Path to existing presetation root')
    parser.add_option('-R','--norun',dest='norun',action='store_true',default=False,help='Do not run anything')
    parser.add_option('-P','--nopresent',dest='nopresent',action='store_true',default=False,help='Do not present anything')
    parser.add_option('-K','--keep',dest='keepcases',action='store_true',default=False,help='Do not delete sub cases after runs')
    parser.add_option('-N','--np',dest='nprocs',default=1,type=int,help='Number of simultaneous tests to spawn')
    parser.add_option('-g','--debug',dest='debug',action='store_true',default=False,help='Verbose output')
    options,arguments = parser.parse_args()

    if not options.testroot:
        Error('Need testroot. Run with --help')
    if not options.htmlroot and not options.nopresent:
        Error('Need htmlroot. Run with --help')

    p = Paths(options.testroot,options.htmlroot,noCheck=True)
    p.SkipPresentation = options.nopresent
    p.DeleteSubCases = (not options.keepcases)
    p.Debug = options.debug
    p.SkipRun = options.norun
    p.nThreads = options.nprocs
    p.assertRoots()
    return arguments

def testPaths():
    p = Paths()

    presentRoot = p.presentRoot(p.TestRoot+'/incompressible/RAS/cavity/subCase_001')
    print presentRoot


if __name__=="__main__":
    signal.signal(signal.SIGINT, signal_handler)
    arguments = getArgs()
    if not 'TEST' in arguments:
        p = Paths()
        Suite = SuiteRunner(p.TestRoot)
        Suite.run(p.nThreads)
        Suite.present()
    else:
        testPaths()
